plugins {
	id "fabric-loom" version "1.5-SNAPSHOT"
	id "java-library"
}

version = "${project.mod_version}+${project.minecraft_version}"
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

java {
	withSourcesJar()
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	archiveClassifier.set("shadow")
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
	it.options.encoding = "UTF-8"
}

sourcesJar {
	archiveClassifier.set("sources")
	from sourceSets.main.allSource
}

remapJar {
	archiveClassifier.set("local")
}

repositories {
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://maven.terraformersmc.com/releases/" }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.fabricloader_version}"
	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	modApi("com.terraformersmc:modmenu:${project.modmenu_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	include(implementation("io.netty:netty-handler-proxy:4.1.97.Final"))

	compileOnly "org.projectlombok:lombok:1.18.30"
	annotationProcessor "org.projectlombok:lombok:1.18.30"
}

processResources {
	def v = [
			mod_version: version,
			minecraft_version: minecraft_version,
			modmenu_version: modmenu_version,
			cloth_config_version: cloth_config_version,
			fabricloader_version: fabricloader_version
	]
	inputs.properties v

	filesMatching("fabric.mod.json") {
		expand v
	}
}
